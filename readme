#!/bin/bash

# Configuración inicial
host=$(hostname)
ssl="true"
protocol=$([ "$ssl" == "true" ] && echo "https" || echo "http")
url="api/v2/ping"
uri="${protocol}://${host}/${url}"

# Hacer la solicitud a la API y obtener el código de estado
status_code=$(curl -k -o /dev/null -s -w "%{http_code}" "$uri")

# Revisar si la respuesta fue satisfactoria
if [ "$status_code" -eq 200 ]; then
  echo "Ansible Tower es accesible."

  # Vuelve a hacer la solicitud para obtener el cuerpo de la respuesta
  response=$(curl -k -s "$uri")

  # Extraer la versión y el nodo activo del JSON
  version=$(echo "$response" | jq -r '.version')
  active_node=$(echo "$response" | jq -r '.active_node')
  
  # Analizar cada instancia y verificar
  echo "$response" | jq -c '.instances[]' | while read -r instance; do
    node=$(echo "$instance" | jq -r '.node')
    node_version=$(echo "$instance" | jq -r '.version')
    node_capacity=$(echo "$instance" | jq -r '.capacity')
    node_heartbeat=$(echo "$instance" | jq -r '.heartbeat')
    
    if [ "$node" == "$active_node" ] && [ "$node_version" == "$version" ]; then
      echo "Coincidencia encontrada en el nodo $node con capacidad $node_capacity y su latido fue a las $node_heartbeat."
    else
      echo "Nodo $node con ERROR: capacidad $node_capacity y su latido fue a las $node_heartbeat."
    fi
  done
else
  echo "Ansible Tower no es accesible. Estado: $status_code"
fi
